{"version":3,"sources":["components/navbar.jsx","images/logo.svg","components/sidebar.jsx","components/common/code.jsx","components/index.jsx","components/common/section.jsx","components/cta-buttons.jsx","components/round-buttons.jsx","components/toggles.jsx","components/forms.jsx","components/tooltip.jsx","components/badges.jsx","components/shadow.jsx","components/colours.jsx","components/common/copyIcon.jsx","components/icons.jsx","components/logos.jsx","App.js","reportWebVitals.js","index.js"],"names":["Component","Sidebar","state","className","src","Logo","alt","to","exact","activeClassName","styles","marginTop","padding","boxSizing","whiteSpace","backgroundColor","copyButton","position","right","outline","cursor","top","Code","props","content","React","Children","toArray","children","forEach","e","type","useState","isCopied","setIsCopied","Fragment","styling","style","text","onCopy","setTimeout","hideOnClick","xmlns","width","height","fill","fillRule","id","stroke","d","wrapLines","github","language","customStyle","defaultProps","Index","Section","title","CtaButtons","disabled","items","componentTag","offset","currentClassName","href","RoundButtons","Toggles","data-disabled","Forms","action","strokeWidth","strokeLinecap","strokeLinejoin","gridTemplateColumns","name","cols","rows","placeholder","data-error","Tooltip","document","querySelectorAll","querySelector","innerText","innerHTML","el","containerHeight","clientHeight","containerWidth","clientWidth","classList","contains","left","bottom","this","resizeTooltips","display","flexWrap","columnGap","alignContent","alignItems","Badges","justifyContent","Shadows","Colours","CopyIcon","prefix","x","y","viewBox","xmlSpace","transform","Icons","Logos","App","render","location","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.3fc834e2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './css/navbar.css'\n\nclass Navbar extends Component {\n  state = {}\n  render() {\n    return (\n      <nav>\n        <div>DSM4DEVS</div>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/logo.50db1b82.svg\";","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './css/sidebar.css'\nimport Logo from '../images/logo.svg'\n\nclass Sidebar extends Component {\n  state = {}\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <img src={Logo} className=\"logo\" alt=\"Logo\" />\n        <NavLink to=\"/\" exact activeClassName=\"active\">\n          Installation\n        </NavLink>\n        <NavLink to=\"/components/\" activeClassName=\"active\">\n          Components\n        </NavLink>\n        <div className=\"subMenu\">\n          <NavLink to=\"/components/cta-buttons\" activeClassName=\"active\">\n            CTA Buttons\n          </NavLink>\n          <NavLink to=\"/components/round-buttons\" activeClassName=\"active\">\n            Round Buttons\n          </NavLink>\n          <NavLink to=\"/components/toggles\" activeClassName=\"active\">\n            Toggles\n          </NavLink>\n          <NavLink to=\"/components/forms\" activeClassName=\"active\">\n            Forms\n          </NavLink>\n          <NavLink to=\"/components/tooltips\" activeClassName=\"active\">\n            Tooltips\n          </NavLink>\n          <NavLink to=\"/components/badges\" activeClassName=\"active\">\n            Badges\n          </NavLink>\n          <NavLink to=\"/components/shadows\" activeClassName=\"active\">\n            Shadows\n          </NavLink>\n          {/* <NavLink to=\"/components/colours\" activeClassName=\"active\">\n            Colours\n          </NavLink> */}\n        </div>\n        <NavLink to=\"/icon-library\" activeClassName=\"active\">\n          Icons Library\n        </NavLink>\n        <NavLink to=\"/logo-library\" activeClassName=\"active\">\n          Logo Library\n        </NavLink>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { useState } from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { github } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport Tippy from '@tippyjs/react'\nimport 'tippy.js/dist/tippy.css' // optional\n\nlet styles = {\n  marginTop: '35px',\n  padding: '25px 30px',\n  boxSizing: 'border-box',\n  whiteSpace: 'normal',\n  backgroundColor: '#F1F1F1',\n}\n\nlet copyButton = {\n  position: 'absolute',\n  right: '14px',\n  outline: 'none !important',\n  cursor: 'pointer',\n  top: '10px',\n}\n\nconst Code = (props) => {\n  let content = ''\n\n  React.Children.toArray(props.children).forEach((e) => {\n    !e.type ? (content += e) : (content += '\\n')\n  })\n\n  const [isCopied, setIsCopied] = useState(false)\n\n  return (\n    <React.Fragment>\n      {props.styling !== 'inline' ? (\n        <div style={{ position: 'relative' }}>\n          <CopyToClipboard\n            text={content}\n            onCopy={() => {\n              setTimeout(() => {\n                setIsCopied(false)\n              }, 1500)\n              setIsCopied(true)\n            }}\n          >\n            <span style={copyButton} className=\"copyIcon\">\n              <Tippy\n                hideOnClick={false}\n                content={isCopied ? 'Copied!' : 'Copy to clipboard'}\n                className=\"hoverTooltip\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"17\">\n                  <g fill=\"none\" fillRule=\"evenodd\">\n                    <path\n                      id=\"iconStroke\"\n                      stroke=\"#898989\"\n                      d=\"M14.714 6.625V4c0-.825-.685-1.5-1.524-1.5h-3.184A2.291 2.291 0 007.857 1c-.99 0-1.828.63-2.148 1.5H2.524C1.686 2.5 1 3.175 1 4v10.5c0 .825.686 1.5 1.524 1.5H13.19c.839 0 1.524-.675 1.524-1.5v-2.625\"\n                    ></path>\n                    <path\n                      id=\"iconFill\"\n                      fill=\"#898989\"\n                      fillRule=\"nonzero\"\n                      d=\"M10.143 13h-7.62v-1.5h7.62zm-2.286-3H2.524V8.5h5.333zm2.286-3h-7.62V5.5h7.62zm7.111 3.743h-3.996v2.25l-3.81-3.75 3.81-3.75v2.25h3.996z\"\n                    ></path>\n                  </g>\n                </svg>\n              </Tippy>\n            </span>\n          </CopyToClipboard>\n\n          <SyntaxHighlighter\n            wrapLines={true}\n            style={github}\n            language={props.language}\n            customStyle={styles}\n            className={props.styling === 'inline' ? 'inlineStyling' : ''}\n          >\n            {content}\n          </SyntaxHighlighter>\n        </div>\n      ) : (\n        <SyntaxHighlighter\n          wrapLines={true}\n          style={github}\n          language={props.language}\n          customStyle={styles}\n          className={props.styling === 'inline' ? 'inlineStyling' : ''}\n        >\n          {content}\n        </SyntaxHighlighter>\n      )}\n    </React.Fragment>\n  )\n}\n\nCode.defaultProps = {\n  language: 'xml',\n  styling: 'null',\n}\nexport default Code\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\n\nclass Index extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div className=\"contentMaxWidth\">\n        <div className=\"pageTitle\">Installation</div>\n        <div className=\"pageSubTitle\">\n          Learn how to include the styling in your project.\n        </div>\n        <div className=\"sectionTitle\"># Usage</div>\n        To install the styling and scripts, include the following code in the\n        <Code styling=\"inline\">&lt;head&gt;&lt;/head&gt;</Code>\n        section of your project.\n        <Code>\n          {'<!-- CSS Styling -->'} <br />\n          {\n            '<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/glassesUSA/dsm@latest/dist/styles.css\">'\n          }\n          <br />\n          <br />\n          {\n            '<!-- Scripts - Required if you are using any form elements/buttons-->'\n          }\n          <br />\n          {\n            '<script src=\"https://cdn.jsdelivr.net/gh/glassesUSA/dsm@latest/dist/dsm-effects.js\"></script>'\n          }\n        </Code>\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React from 'react'\n\nconst Section = (props) => {\n  return (\n    <div id={props.id}>\n      <div className=\"sectionTitle\"># {props.title}</div>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Section\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\nimport Scrollspy from 'react-scrollspy'\n\nclass CtaButtons extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">CTA Buttons</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              The CTA buttons are the most important buttons on the site and are\n              designed for the central reference on the page.\n            </div>\n            {/* Usage */}\n            <Section title=\"Usage\" id=\"usage\">\n              To apply this component, add the\n              <Code styling=\"inline\">.dsmButton</Code> class to a\n              <Code styling=\"inline\">{`<button></button>`}</Code> element. Add\n              the <Code styling=\"inline\">disabled</Code> attribute to a{' '}\n              <Code styling=\"inline\">{`<button></button>`}</Code> element to\n              disable the button. Further styling options can be seen below.{' '}\n              <div className=\"exampleContainer\">\n                <button className=\"dsmButton\">Lorem Ipsum</button>\n                <button className=\"dsmButton\" disabled>\n                  Lorem Ipsum\n                </button>\n              </div>\n              <Code>\n                {`<button class=\"dsmButton\"></button>`}\n                <br />\n                <br />\n                {`<button class=\"dsmButton\" disabled></button>`}\n              </Code>\n            </Section>\n\n            <Section title=\"Colours\" id=\"colours\">\n              There are two different colours to choose from, either the default\n              primary styling or the secondary styling. To add the secondary\n              styling add{' '}\n              <Code styling=\"inline\" language=\"css\">\n                .secondary\n              </Code>\n              to the button element classlist. For the default styling there is\n              no need to add an extra class.\n              <div className=\"exampleContainer\">\n                <button className=\"dsmButton secondary\">Lorem Ipsum</button>\n              </div>\n              <Code>{'<button class=\"dsmButton secondary\"></button>'}</Code>\n            </Section>\n\n            <Section title=\"Sizes\" id=\"sizes\">\n              There are several size modifiers available. Just add one of the\n              following classes to apply a different size\n              <div className=\"gridTable\">\n                <span className=\"previewTitle\">Class</span>\n                <span className=\"previewTitle\">Preview</span>\n\n                <Code styling=\"inline\">.extralarge</Code>\n                <button className=\"dsmButton extralarge\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.large</Code>\n                <button className=\"dsmButton large\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.regular</Code>\n                <button className=\"dsmButton regular\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.medium</Code>\n                <button className=\"dsmButton medium\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.small</Code>\n                <button className=\"dsmButton small\">Lorem Ipsum</button>\n              </div>\n              <Code>\n                {`<button class='dsmButton extralarge'></button>`}\n                <br />\n                {`<button class='dsmButton large'></button>`}\n                <br />\n                {`<button class='dsmButton regular'></button>`}\n                <br />\n                {`<button class='dsmButton medium'></button>`}\n                <br />\n                {`<button class='dsmButton small'></button>`}\n              </Code>\n            </Section>\n\n            <Section title=\"Styles\" id=\"styles\">\n              If you want the button to have a “ghost” outline add\n              <Code styling=\"inline\" language=\"css\">\n                .ghost\n              </Code>\n              to the button element classlist.\n              <div className=\"exampleContainer\">\n                <button className=\"dsmButton ghost\">Lorem Ipsum</button>\n              </div>\n              <Code>{`<button class='dsmButton ghost'></button>`}</Code>\n            </Section>\n          </div>\n\n          <Scrollspy\n            items={['usage', 'colours', 'sizes', 'styles']}\n            componentTag=\"div\"\n            className=\"sideNav\"\n            offset={-50}\n            currentClassName=\"active\"\n          >\n            <a href=\"#usage\" className=\"active\">\n              Usage\n            </a>\n            <a href=\"#colours\">Colours</a>\n            <a href=\"#sizes\">Sizes</a>\n            <a href=\"#styles\">Styles</a>\n          </Scrollspy>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CtaButtons\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\nimport Scrollspy from 'react-scrollspy'\n\nclass RoundButtons extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Round Buttons</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              The rounded buttons are less important than the main CTA buttons\n              and use for making a second-level hierarchy.\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              To apply this component, add the\n              <Code styling=\"inline\">.dsmButton round</Code> classes to a\n              <Code styling=\"inline\">{`<button></button>`}</Code> element. Add\n              the <Code styling=\"inline\">disabled</Code> attribute to a{' '}\n              <Code styling=\"inline\">{`<button></button>`}</Code> element to\n              disable the button. Further styling options can be seen below.{' '}\n              <div className=\"exampleContainer\">\n                <button className=\"dsmButton round\">Lorem Ipsum</button>\n                <button className=\"dsmButton round\" disabled>\n                  Lorem Ipsum\n                </button>\n              </div>\n              <Code>\n                {`<button class=\"dsmButton round\"></button>`}\n                <br />\n                <br />\n                {`<button class=\"dsmButton round\" disabled></button>`}\n              </Code>\n            </Section>\n\n            <Section title=\"Colours\" id=\"colours\">\n              There are a few different colour options to choose from listed\n              below. Add one of the following classes to a{' '}\n              <Code styling=\"inline\">.dsmButton round</Code> button element to\n              apply the styles{' '}\n              <div className=\"gridTable\">\n                <span className=\"previewTitle\">Class</span>\n                <span className=\"previewTitle\">Preview</span>\n\n                <Code styling=\"inline\">.codGray</Code>\n                <button className=\"dsmButton round codGray\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.porcelain</Code>\n                <button className=\"dsmButton round porcelain\">\n                  Lorem Ipsum\n                </button>\n                <Code styling=\"inline\">.regentGray</Code>\n                <button className=\"dsmButton round regentGray\">\n                  Lorem Ipsum\n                </button>\n                <Code styling=\"inline\">.towerGray</Code>\n                <button className=\"dsmButton round towerGray\">\n                  Lorem Ipsum\n                </button>\n                <Code styling=\"inline\">.white</Code>\n                <button className=\"dsmButton round white\">Lorem Ipsum</button>\n              </div>\n              <Code>\n                {`<button class=\"dsmButton round codGray\"></button>`}\n                <br />\n                {`<button class=\"dsmButton round porcelain\"></button>`}\n                <br />\n                {`<button class=\"dsmButton round regentGray\"></button>`}\n                <br />\n                {`<button class=\"dsmButton round towerGray\"></button>`}\n                <br />\n                {`<button class=\"dsmButton round white\"></button>`}\n              </Code>\n            </Section>\n\n            <Section title=\"Sizes\" id=\"sizes\">\n              There are several size modifiers available. Just add one of the\n              following classes to a{' '}\n              <Code styling=\"inline\">.dsmButton round</Code> button element to\n              apply a different size\n              <div className=\"gridTable\">\n                <span className=\"previewTitle\">Class</span>\n                <span className=\"previewTitle\">Preview</span>\n                <Code styling=\"inline\">.regular</Code>\n                <button className=\"dsmButton round regular\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.medium</Code>\n                <button className=\"dsmButton round medium\">Lorem Ipsum</button>\n                <Code styling=\"inline\">.small</Code>\n                <button className=\"dsmButton round small\">Lorem Ipsum</button>\n              </div>\n              <Code>\n                {`<button class='dsmButton regular'></button>`}\n                <br />\n                {`<button class='dsmButton medium'></button>`}\n                <br />\n                {`<button class='dsmButton small'></button>`}\n              </Code>\n            </Section>\n\n            <Section title=\"Styles\" id=\"styles\">\n              If you want the button to have a “ghost” outline add\n              <Code styling=\"inline\" language=\"xml\">\n                .dsmButton round ghost\n              </Code>\n              to the button element classlist.\n              <div className=\"exampleContainer\">\n                <button className=\"dsmButton round ghost\">Lorem Ipsum</button>\n              </div>\n              <Code>{`<button class='dsmButton round ghost'></button>`}</Code>\n            </Section>\n          </div>\n\n          <Scrollspy\n            items={['usage', 'colours', 'sizes', 'styles']}\n            componentTag=\"div\"\n            className=\"sideNav\"\n            offset={-50}\n            currentClassName=\"active\"\n          >\n            <a href=\"#usage\" className=\"active\">\n              Usage\n            </a>\n            <a href=\"#colours\">Colours</a>\n            <a href=\"#sizes\">Sizes</a>\n            <a href=\"#styles\">Styles</a>\n          </Scrollspy>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RoundButtons\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\n\nclass Toggles extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Toggles</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              The toggles are used to choose between two different states.\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              To apply this component, add a label component with the class{' '}\n              <Code styling=\"inline\">.dsmSlider</Code>. To disable the slider,\n              add <Code styling=\"inline\">data-disabled=true</Code> attribute to\n              the label element.\n              <Code>\n                {`<label class=\"dsmSlider\"></label>`}\n                <br /> <br />\n                {`<label class=\"dsmSlider\" data-disabled=true></label>`}\n              </Code>{' '}\n              <div className=\"exampleContainer\">\n                <label className=\"dsmSlider\">\n                  <input type=\"checkbox\" />\n                  <span className=\"slider\"></span>\n                </label>\n                <label className=\"dsmSlider\" data-disabled={true}>\n                  <input type=\"checkbox\" disabled />\n                  <span className=\"slider\"></span>\n                </label>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Toggles\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\nimport Scrollspy from 'react-scrollspy'\n\nclass Forms extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Forms</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              All the different elements that are relevant to forms\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              To apply these elements, they need to sit inside a form with the\n              class\n              <Code styling=\"inline\">.dsmForm</Code>.\n              <Code>\n                {`<form class=\"dsmForm\">`}\n                <br />\n                ...\n                <br />\n                {`</form>`}\n              </Code>\n            </Section>\n\n            <Section title=\"Dropdown\" id=\"dropdown\">\n              Used to display multiple elements to choose from it also comes\n              with an event you can hook into for when the user selects an\n              option. If there is an error you add the{' '}\n              <Code styling=\"inline\">error</Code> class to the parent element.\n              You can also optionally add an error message with the code{' '}\n              <Code styling=\"inline\">{'<span class=\"error\">....</span>'}</Code>.\n              Finally you can disable the dropdown element by adding{' '}\n              <Code styling=\"inline\">data-disabled=true</Code> to the container\n              element.\n              <p></p> To access the event on value change, use the function{' '}\n              <Code styling=\"inline\" language=\"js\">\n                selectItem(value)\n              </Code>{' '}\n              value being the result that it will return to you. If you want to\n              change the default value, use the{' '}\n              <Code styling=\"inline\">data-placeholder=\"\"</Code> attribute and\n              enter the desired placeholder you require.\n              <form action=\"\" className=\"dsmForm exampleContainer\">\n                <div className=\"selectContainer\">\n                  <button>\n                    <span className=\"selectedItem\">Placeholder</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      stroke=\"rgb(137, 149, 156)\"\n                      width=\"12px\"\n                      height=\"10px\"\n                    >\n                      <path\n                        d=\"M1 1l5 6 5-6\"\n                        strokeWidth=\"2\"\n                        fill=\"none\"\n                        fillRule=\"evenodd\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n                  <ul>\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                  </ul>\n                </div>\n                <div className=\"selectContainer error\">\n                  <button>\n                    <span className=\"selectedItem\">Placeholder</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      stroke=\"rgb(137, 149, 156)\"\n                      width=\"12px\"\n                      height=\"10px\"\n                    >\n                      <path\n                        d=\"M1 1l5 6 5-6\"\n                        strokeWidth=\"2\"\n                        fill=\"none\"\n                        fillRule=\"evenodd\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n                  <ul>\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                  </ul>\n                  <span className=\"error\">This is an error message</span>\n                </div>\n                <div className=\"selectContainer\">\n                  <button disabled>\n                    <span className=\"selectedItem\">Placeholder</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      stroke=\"rgb(137, 149, 156)\"\n                      width=\"12px\"\n                      height=\"10px\"\n                    >\n                      <path\n                        d=\"M1 1l5 6 5-6\"\n                        strokeWidth=\"2\"\n                        fill=\"none\"\n                        fillRule=\"evenodd\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n                  <ul>\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                  </ul>\n                </div>\n              </form>\n              <Code>\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"selectContainer\" data-placeholder=\"Placeholder\">`}{' '}\n                <br />\n                {'    <ul>'} <br />\n                {'       <li>Item 1</li>'} <br />\n                {'       ...'} <br />\n                {'   </ul>'} <br />\n                {'  </div>'} <br />\n                {'</form>'}\n              </Code>\n              <Code>\n                {`// Error`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"selectContainer error\" data-placeholder=\"Placeholder\">`}{' '}\n                <br />\n                {'    <ul>'} <br />\n                {'       <li>Item 1</li>'} <br />\n                {'       ...'} <br />\n                {'   </ul>'} <br />\n                {'   <span class=\"error\">This is an error message</span>'}{' '}\n                <br />\n                {'  </div>'} <br />\n                {'</form>'}\n              </Code>{' '}\n              <Code>\n                {`// Disabled`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"selectContainer\" data-placeholder=\"Placeholder\" data-disabled=true>`}{' '}\n                <br />\n                {'    <ul>'} <br />\n                {'       <li>Item 1</li>'} <br />\n                {'       ...'} <br />\n                {'   </ul>'} <br />\n                {'  </div>'} <br />\n                {'</form>'}\n              </Code>\n            </Section>\n\n            <Section title=\"Text area\" id=\"textarea\">\n              These are used for large bodies of text. There are three states\n              available: default, disabled and error. If there is an error add\n              the <Code styling=\"inline\">error</Code> class to the textarea\n              element. You can also optionally add an error message with the\n              code{' '}\n              <Code styling=\"inline\">{'<span class=\"error\">....</span>'}</Code>.\n              Finally you disable the element by adding{' '}\n              <Code styling=\"inline\">disabled</Code> to the textarea element.{' '}\n              <form\n                action=\"\"\n                className=\"dsmForm exampleContainer\"\n                style={{ gridTemplateColumns: '1fr 1fr 1fr' }}\n              >\n                <textarea\n                  name=\"\"\n                  id=\"\"\n                  cols=\"1\"\n                  rows=\"10\"\n                  placeholder=\"This is a text area\"\n                ></textarea>\n                <textarea\n                  disabled\n                  name=\"\"\n                  id=\"\"\n                  cols=\"1\"\n                  rows=\"10\"\n                  placeholder=\"This is a text area\"\n                ></textarea>\n                <div>\n                  <textarea\n                    className=\"error\"\n                    name=\"\"\n                    id=\"\"\n                    cols=\"1\"\n                    rows=\"10\"\n                    placeholder=\"This is a text area\"\n                  ></textarea>\n                  <span className=\"error\">This is an error message</span>\n                </div>\n              </form>\n              <Code>\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <textarea></textarea>`} <br />\n                {'</form>'}\n              </Code>\n              <Code>\n                {`// Disabled`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <textarea disabled></textarea>`} <br />\n                {'</form>'}\n                <br />\n                {'  </div>'} <br />\n                {'</form>'}\n              </Code>\n              <Code>\n                {`// Error`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <textarea class=\"error\"></textarea>`} <br />\n                {'  <span class=\"error\">This is an error message</span>'} <br />\n                {'</form>'}\n              </Code>\n            </Section>\n\n            <Section title=\"Text Field\" id=\"textfield\">\n              These are used for small bodies of text. There are three states\n              available: default, disabled and error. If there is an error add\n              the <Code styling=\"inline\">error</Code> class to the input\n              element. You can also optionally add an error message with the\n              code{' '}\n              <Code styling=\"inline\">{'<span class=\"error\">....</span>'}</Code>.\n              Finally you disable the element by adding{' '}\n              <Code styling=\"inline\">disabled</Code> to the input element. To\n              add the text field you need to exactly copy the format of the code\n              below.\n              <form action=\"\" className=\"dsmForm exampleContainer\">\n                <div className=\"inputLabel\">\n                  <label>Placeholder</label>\n                  <input type=\"text\" name=\"\" id=\"\" placeholder=\"bananas\" />\n                </div>\n                <div className=\"inputLabel\">\n                  <label>Placeholder</label>\n                  <input type=\"text\" name=\"\" id=\"\" disabled />\n                </div>\n                <div className=\"inputLabel\">\n                  <label>Placeholder</label>\n                  <input type=\"text\" name=\"\" className=\"error\" id=\"\" />\n                </div>\n              </form>\n              <Code>\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"inputLabel\">`} <br />\n                {`      <label>Placeholder</label>`} <br />\n                {`      <input type=\"text\">`} <br />\n                {`  </div>`} <br />\n                {'</form>'}\n              </Code>{' '}\n              <Code>\n                {`// Disabled`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"inputLabel\">`} <br />\n                {`      <label>Placeholder</label>`} <br />\n                {`      <input type=\"text\" disabled>`} <br />\n                {`  </div>`} <br />\n                {'</form>'}\n              </Code>\n              <Code>\n                {`// Error`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"inputLabel\">`} <br />\n                {`      <label>Placeholder</label>`} <br />\n                {`      <input type=\"text\" class=\"error\">`} <br />\n                {`  </div>`} <br />\n                {'</form>'}\n              </Code>\n            </Section>\n            <Section title=\"Radio Button\" id=\"radiobutton\">\n              These are used for small bodies of text. There are three states\n              available: default, disabled and error. If there is an error add\n              the <Code styling=\"inline\">error</Code> class to the span element.\n              You can also optionally add an error message with the code{' '}\n              <Code styling=\"inline\">{'<span class=\"error\">....</span>'}</Code>.\n              Finally you disable the element by adding{' '}\n              <Code styling=\"inline\">disabled</Code> to the input element.{' '}\n              <p></p> There are also 3 different size options to choose from.\n              You can choose between\n              <Code styling=\"inline\">medium</Code> or{' '}\n              <Code styling=\"inline\">large</Code> and the default size which\n              requires no extra class. Add these styles to the{' '}\n              <Code styling=\"inline\">span</Code> element\n              <form action=\"\" className=\"dsmForm exampleContainer\">\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" />\n                  <span className=\"radioStyling\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" disabled />\n                  <span className=\"radioStyling\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" />\n                  <span className=\"radioStyling error\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" />\n                  <span className=\"radioStyling medium\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" disabled />\n                  <span className=\"radioStyling medium\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" />\n                  <span className=\"radioStyling medium error\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" />\n                  <span className=\"radioStyling large\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" disabled />\n                  <span className=\"radioStyling large\"></span>\n                </div>\n                <div className=\"radioContainer\">\n                  <input type=\"radio\" name=\"radioTest\" id=\"\" />\n                  <span className=\"radioStyling large error\"></span>\n                </div>\n              </form>\n              <Code>\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"radioContainer\">`} <br />\n                {`      <input type=\"radio\" name=\"radioTest\">`} <br />\n                {`      <span class=\"radioStyling\"></span>`} <br />\n                {`  </div>`} <br />\n                {'</form>'}\n              </Code>{' '}\n              <Code>\n                {`// Disabled`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"radioContainer\">`} <br />\n                {`      <input type=\"radio\" name=\"radioTest\" disabled>`} <br />\n                {`      <span class=\"radioStyling\"></span>`} <br />\n                {`  </div>`} <br />\n                {'</form>'}\n              </Code>\n              <Code>\n                {`// Error`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <div class=\"radioContainer\">`} <br />\n                {`      <input type=\"radio\" name=\"radioTest\">`} <br />\n                {`      <span class=\"radioStyling error\"></span>`} <br />\n                {`  </div>`} <br />\n                {'</form>'}\n              </Code>\n            </Section>\n            <Section title=\"Checkbox\" id=\"checkbox\">\n              These are used for small bodies of text. There are three states\n              available: default, disabled and error. If there is an error add\n              the <Code styling=\"inline\">data-error=true</Code> to the label\n              element. You can also optionally add an error message with the\n              code{' '}\n              <Code styling=\"inline\">{'<span class=\"error\">....</span>'}</Code>{' '}\n              after the label element. Finally you disable the element by adding{' '}\n              <Code styling=\"inline\">data-disabled=true</Code> to the label\n              element.{' '}\n              <form action=\"\" className=\"dsmForm exampleContainer\">\n                <label className=\"checkboxContainer\">\n                  <input type=\"checkbox\" />\n                  <span className=\"checkbox\"></span>\n                </label>\n                <label className=\"checkboxContainer\" data-disabled={true}>\n                  <input type=\"checkbox\" disabled />\n                  <span className=\"checkbox\"></span>\n                </label>\n                <label className=\"checkboxContainer\" data-error={true}>\n                  <input type=\"checkbox\" />\n                  <span className=\"checkbox error\"></span>\n                </label>\n              </form>\n              <Code>\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <label class=\"checkboxContainer\"></label>`} <br />\n                {'</form>'}\n              </Code>{' '}\n              <Code>\n                {`// Disabled`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <label class=\"checkboxContainer\" data-disabled=true></label>`}\n                <br />\n                {'</form>'}\n              </Code>\n              <Code>\n                {`// Error`} <br />\n                {`<form action=\"\" class=\"dsmForm\">`} <br />\n                {`  <label class=\"checkboxContainer\" data-error=true></label>`}{' '}\n                <br />\n                {'</form>'}\n              </Code>\n            </Section>\n          </div>\n          <Scrollspy\n            items={[\n              'usage',\n              'dropdown',\n              'textarea',\n              'textfield',\n              'radiobutton',\n              'checkbox',\n            ]}\n            componentTag=\"div\"\n            className=\"sideNav\"\n            offset={0}\n            currentClassName=\"active\"\n          >\n            <a href=\"#usage\" className=\"active\">\n              Usage\n            </a>\n            <a href=\"#dropdown\">Dropdown</a>\n            <a href=\"#textarea\">Text area</a>\n            <a href=\"#textfield\">Text Field</a>\n            <a href=\"#radio\">Radio Button</a>\n            <a href=\"#checkbox\">Checkbox</a>\n          </Scrollspy>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Forms\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\n\nclass Tooltip extends Component {\n  state = {}\n\n  resizeTooltips() {\n    document.querySelectorAll('.dsmTooltip').forEach((e) => {\n      setTimeout(() => {\n        if (e.querySelector('.item')) return\n\n        let text = e.innerText\n        e.innerHTML = `<div class=\"item\">?</div><div class=\"container\">\n            <div class=\"arrow\"></div>\n            <div class=\"infoBox\">\n                <div class=\"textArea\">${text}</div>\n            </div>\n        </div>`\n        const el = e.querySelector('.container')\n        const containerHeight = el.clientHeight\n        const containerWidth = el.clientWidth\n\n        switch (true) {\n          case e.classList.contains('right'):\n            el.style.top = `-${containerHeight / 2 - 5}px`\n            el.style.left = `-${containerWidth}px`\n            el.querySelector('.arrow').style.top = `${\n              containerHeight / 2 - 4\n            }px`\n            break\n          case e.classList.contains('left'):\n            el.style.top = `-${containerHeight / 2 - 5}px`\n            el.style.right = `-${containerWidth}px`\n            el.querySelector('.arrow').style.top = `${\n              containerHeight / 2 - 4\n            }px`\n            el.style.left = `40px`\n            break\n          case e.classList.contains('bottom'):\n            el.style.top = `30px`\n            el.style.left = `-${containerWidth / 2 - 10}px`\n            break\n          default:\n            el.style.left = `-${containerWidth / 2 - 15}px`\n            el.style.top = `unset`\n            el.style.bottom = `30px`\n            break\n        }\n\n        if (e.classList.contains('close')) {\n          el.innerHTML =\n            el.innerHTML +\n            `<svg onclick=\"closeTooltip(this)\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\" width=\"100%\" height=\"100%\"><g fill=\"none\" stroke=\"#b0bdc5\"><path d=\"M12.3.7L.6 12.3M.7.7l11.7 11.6\"></path></g></svg>`\n        }\n      }, 100)\n    })\n  }\n\n  componentDidMount() {\n    this.resizeTooltips()\n  }\n  componentDidUpdate() {\n    this.resizeTooltips()\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Tooltips</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              Used to show and hide data on hover or click.\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              To apply this component, create a{' '}\n              <Code styling=\"inline\">div</Code> with the class of{' '}\n              <Code styling=\"inline\">.dsmTooltip</Code>. To change its position\n              add the direction after the class. So for right it would be{' '}\n              <Code styling=\"inline\">.dsmTooltip right</Code>. To make the\n              tooltip only open on \"click\" add the class{' '}\n              <Code styling=\"inline\">.click</Code> in addition.\n              <p /> When the tooltip is clickable you have the option to add a\n              close button as well by adding the{' '}\n              <Code styling=\"inline\">close</Code> class to the element.\n              <Code>\n                {`<div class=\"dsmTooltip\">Some text here</div>`}\n                <br /> <br />\n                {`<div class=\"dsmTooltip left\">Some text here</div>`}\n                <br /> <br />\n                {`<div class=\"dsmTooltip right\">Some text here</div>`}\n                <br /> <br />\n                {`<div class=\"dsmTooltip up\">Some text here</div>`}\n                <br /> <br />\n                {`<div class=\"dsmTooltip bottom\">Some text here</div>`}\n                <br /> <br />\n                {`<div class=\"dsmTooltip click\">Some text here</div>`}\n                <br /> <br />\n                {`<div class=\"dsmTooltip click close\">Some text here</div>`}\n              </Code>{' '}\n              <div\n                className=\"exampleContainer\"\n                style={{\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  columnGap: '20px',\n                  alignContent: 'center',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <div>\n                  <div className=\"dsmTooltip\">Click me!</div>\n                  Hover here!\n                </div>\n                <div>\n                  <div className=\"dsmTooltip left\">Click me!</div>\n                  Hover left!\n                </div>\n                <div>\n                  <div className=\"dsmTooltip right\">Click me!</div>\n                  Hover right!\n                </div>\n                <div>\n                  <div className=\"dsmTooltip up\">Click me!</div>\n                  Hover upwards!\n                </div>\n                <div>\n                  <div className=\"dsmTooltip bottom\">Some text here</div>\n                  Hover downwards!\n                </div>\n                <div>\n                  <div className=\"dsmTooltip click\">Click me!</div>\n                  Click me!\n                </div>\n                <div>\n                  <div className=\"dsmTooltip click close\">Click me!</div>\n                  Click me!\n                </div>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tooltip\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\n\nclass Badges extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Badges</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              Used to highlight important sections. Placed in the corners of\n              elements{' '}\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              To apply this component, create a component with the class{' '}\n              <Code styling=\"inline\">.dsmBadges</Code>. The available badges are\n              listed below.\n              <Code>\n                {`<div class=\"dsmBadge premium\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmBadge sellingFast\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmBadge sales\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmBadge misc\"></div>`}\n              </Code>{' '}\n              <div\n                className=\"gridTable\"\n                style={{\n                  gridTemplateColumns: 'auto auto',\n                  justifyContent: 'flex-start',\n                }}\n              >\n                <span className=\"previewTitle\">Class</span>\n                <span className=\"previewTitle\">Preview</span>\n\n                <Code styling=\"inline\">.premium</Code>\n                <div className=\"dsmBadge premium\">Lorem Ipsum</div>\n                <Code styling=\"inline\">.sellingFast</Code>\n                <div className=\"dsmBadge sellingFast\">Lorem Ipsum</div>\n                <Code styling=\"inline\">.sales</Code>\n                <div className=\"dsmBadge sales\">Lorem Ipsum</div>\n                <Code styling=\"inline\">.misc</Code>\n                <div className=\"dsmBadge misc\">Lorem Ipsum</div>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Badges\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport Section from './common/section.jsx'\n\nclass Shadows extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Shadows</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              Used to add more focus on elements\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              To apply this component, create a component with the class{' '}\n              <Code styling=\"inline\">.dsmShadow</Code>. The available shadow\n              weights are listed below.\n              <Code>\n                {`<div class=\"dsmShadow\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmShadow shadow-2\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmShadow shadow-3\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmShadow shadow-4\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmShadow shadow-5\"></div>`}\n                <br /> <br />\n                {`<div class=\"dsmShadow shadow-6\"></div>`}\n              </Code>{' '}\n              <div\n                className=\"gridTable stacked\"\n                style={{\n                  gridTemplateColumns: 'repeat(2, auto)',\n                  justifyContent: 'flex-start',\n                  columnGap: '100px',\n                }}\n              >\n                <div className=\"leftColumn\">\n                  <span className=\"previewTitle\">Class</span>\n                  <span className=\"previewTitle\">Preview</span>\n                  <Code styling=\"inline\">Default</Code>\n                  <div className=\"dsmShadow\"></div>\n                  <Code styling=\"inline\">.shadow-2</Code>\n                  <div className=\"dsmShadow shadow-2\"></div>\n                  <Code styling=\"inline\">.shadow-3</Code>\n                  <div className=\"dsmShadow shadow-3\"></div>\n                </div>\n                <div className=\"rightColumn\">\n                  <span className=\"previewTitle\">Class</span>\n                  <span className=\"previewTitle\">Preview</span>\n                  <Code styling=\"inline\">.shadow-4</Code>\n                  <div className=\"dsmShadow shadow-4\"></div>\n                  <Code styling=\"inline\">.shadow-5</Code>\n                  <div className=\"dsmShadow shadow-5\"></div>\n                  <Code styling=\"inline\">.shadow-6</Code>\n                  <div className=\"dsmShadow shadow-6\"></div>\n                </div>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Shadows\n","import React, { Component } from 'react'\n// import Code from './common/code.jsx'\nimport Section from './common/section.jsx'\n\nclass Colours extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Colours</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              A list of general colours used throughout sites\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              UNDER CONSTRUCTION\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Colours\n","import React from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport 'tippy.js/dist/tippy.css' // optional\n\nconst CopyIcon = (props) => {\n  let content = ''\n\n  React.Children.toArray(props.children).forEach((e) => {\n    !e.type ? (content += e) : (content += '\\n')\n  })\n\n  return (\n    <div className=\"icon-flexbox\">\n      <i className={`${props.prefix} ${props.name}`}></i>\n      <CopyToClipboard text={`<i class=\"${props.prefix} ${props.name}\"></i>`}>\n        <div style={{ position: 'relative' }} className=\"iconBox\">\n          {props.name}\n          <svg\n            id=\"prefix__Layer_1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x={0}\n            y={0}\n            className=\"copyIcon\"\n            viewBox=\"0 0 11.3 11\"\n            xmlSpace=\"preserve\"\n            {...props}\n          >\n            <style>{'.prefix__st1{fill:#898989}'}</style>\n            <g id=\"prefix__Page-1\">\n              <g id=\"prefix___x31_440-RES\" transform=\"translate(-1072 -381)\">\n                <g id=\"prefix__Group-14\" transform=\"translate(1073 382)\">\n                  <path\n                    id=\"iconStroke\"\n                    d=\"M8.7 3.3V1.5c0-.6-.5-1-1-1H5.5c-.2-.6-.8-1-1.4-1s-1.2.4-1.4 1H.5c-.6 0-1 .5-1 1v7c0 .6.5 1 1 1h7.1c.6 0 1-.5 1-1V6.8\"\n                    fill=\"none\"\n                    stroke=\"#898989\"\n                  />\n                  <path\n                    id=\"prefix__Path_1_\"\n                    className=\"prefix__st1\"\n                    d=\"M5.6 7.5H.5v-1h5.1z\"\n                  />\n                  <path\n                    id=\"prefix__Path_2_\"\n                    className=\"prefix__st1\"\n                    d=\"M4.1 5.5H.5v-1h3.6z\"\n                  />\n                  <path\n                    id=\"prefix__Path_3_\"\n                    className=\"prefix__st1\"\n                    d=\"M5.6 3.5H.5v-1h5.1z\"\n                  />\n                  <path\n                    id=\"prefix__Path_4_\"\n                    className=\"prefix__st1\"\n                    d=\"M10.3 6H7.7v1.5L5.1 5l2.6-2.5V4h2.6z\"\n                  />\n                </g>\n              </g>\n            </g>\n          </svg>\n        </div>\n      </CopyToClipboard>\n    </div>\n  )\n}\nCopyIcon.defaultProps = {\n  prefix: 'dsmIcons',\n}\nexport default CopyIcon\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport CopyIcon from './common/copyIcon.jsx'\nimport Section from './common/section.jsx'\n\nclass Icons extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Icons</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              A list of general icons used throughout sites\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              All icons are preceded with the class{' '}\n              <Code styling=\"inline\">.dsmIcons</Code> and the related icon code.\n              Icons can be coloured, resized and have any effects applied to it\n              that a normal font would have.\n              <Code>{'<i class=\"dsmIcons clock\"></i>'}</Code>\n              <div className=\"exampleContainer iconGrid\">\n                <CopyIcon name=\"gift\"></CopyIcon>\n                <CopyIcon name=\"money\"></CopyIcon>\n                <CopyIcon name=\"approve\"></CopyIcon>\n                <CopyIcon name=\"lenses\"></CopyIcon>\n                <CopyIcon name=\"visual-comfort\"></CopyIcon>\n                <CopyIcon name=\"arrow-left\"></CopyIcon>\n                <CopyIcon name=\"arrow-right\"></CopyIcon>\n                <CopyIcon name=\"arrow-up\"></CopyIcon>\n                <CopyIcon name=\"arrow-down\"></CopyIcon>\n                <CopyIcon name=\"call\"></CopyIcon>\n                <CopyIcon name=\"help\"></CopyIcon>\n                <CopyIcon name=\"reply\"></CopyIcon>\n                <CopyIcon name=\"computer\"></CopyIcon>\n                <CopyIcon name=\"lock\"></CopyIcon>\n                <CopyIcon name=\"mobile\"></CopyIcon>\n                <CopyIcon name=\"credit_card\"></CopyIcon>\n                <CopyIcon name=\"truck\"></CopyIcon>\n                <CopyIcon name=\"search\"></CopyIcon>\n                <CopyIcon name=\"anti-reflect\"></CopyIcon>\n                <CopyIcon name=\"calendar\"></CopyIcon>\n\n                <CopyIcon name=\"glasses\"></CopyIcon>\n                <CopyIcon name=\"choose-frame\"></CopyIcon>\n                <CopyIcon name=\"map\"></CopyIcon>\n                <CopyIcon name=\"chat\"></CopyIcon>\n                <CopyIcon name=\"money_round\"></CopyIcon>\n                <CopyIcon name=\"form\"></CopyIcon>\n                <CopyIcon name=\"uv_protection\"></CopyIcon>\n                <CopyIcon name=\"camera\"></CopyIcon>\n                <CopyIcon name=\"try_online\"></CopyIcon>\n                <CopyIcon name=\"clock\"></CopyIcon>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Icons\n","import React, { Component } from 'react'\nimport Code from './common/code.jsx'\nimport CopyIcon from './common/copyIcon.jsx'\nimport Section from './common/section.jsx'\n\nclass Logos extends Component {\n  state = {}\n\n  render() {\n    return (\n      <div>\n        <div className=\"pageTitle contentMaxWidth\">Logos - UNDER CONSTRUCTION</div>\n        <div className=\"splitColumn contentMaxWidth\">\n          <div id=\"content\">\n            <div className=\"pageSubTitle\">\n              A list of general logos used throughout sites\n            </div>\n\n            <Section title=\"Usage\" id=\"usage\">\n              All logos are preceded with the class{' '}\n              <Code styling=\"inline\">.dsmLogo</Code> and the related icon code.\n              Logos can be coloured, resized and have any effects applied to it\n              that a normal font would have.\n              <Code>{'<i class=\"dsmIcons clock\"></i>'}</Code>\n              <div className=\"exampleContainer iconGrid\">\n                <CopyIcon prefix=\"dsmLogo\" name=\"adidas\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"alain_mikli\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"armani_exchange\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"autoflex\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"balenciaga\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"blumarine\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"burberry\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"calvin_klein_ck\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"calvin_klein_cosmetics\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"calvin_klein\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"celine\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"coach\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"converse\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"diva\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"dkny\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"dsquared2\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"emporio_armani\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"ermenegildo_zenga\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"flexon\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"fossil\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"gant\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"giorgio_armani\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"givenchy\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"gucci\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"guess\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"hugo_boss\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"jimmy_choo\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"kate_spade\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"lacoste\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"lanvim\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"marc_jacobs\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"michael_kors\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"miu_miu\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"mont_blanc\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"nike\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"oakley\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"oneill\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"persol\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"pierre_cardin\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"polo_ralph_lauren\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"prada\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"puma\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"ray_ban\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"saint_laurent\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"stella_mccartney\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"super_dry\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"swarovski\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"tom_ford\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"tory_burch\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"versach\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"viktor_and_rolf\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"vogue\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"revel_tune\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"amelia_e\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"gamespex\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"gamespex2\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"muse_symbol\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"muse_x_hilary_duff\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"muse\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"olos\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"ottoto\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"revel\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"seaclean\" />\n                <CopyIcon prefix=\"dsmLogo\" name=\"yoji\" />\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Logos\n","import './App.css'\nimport './components/navbar'\nimport Sidebar from './components/sidebar'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Index from './components'\nimport CtaButtons from './components/cta-buttons'\nimport RoundButtons from './components/round-buttons'\nimport Toggles from './components/toggles'\nimport Forms from './components/forms'\nimport Tooltip from './components/tooltip'\nimport Badges from './components/badges'\nimport Shadows from './components/shadow'\nimport Colours from './components/colours'\nimport Icons from './components/icons'\nimport Logos from './components/logos'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"page-layout\">\n        <Sidebar />\n        <div className=\"content\">\n          <Route\n            render={({ location }) => (\n              <Switch location={location}>\n                <Route path=\"/\" exact component={Index} />\n                <Route\n                  path=\"/components\"\n                  exact\n                  render={() => <Redirect to=\"/components/cta-buttons\" />}\n                />\n                <Route path=\"/components/cta-buttons\" component={CtaButtons} />\n                <Route\n                  path=\"/components/round-buttons\"\n                  component={RoundButtons}\n                />\n                <Route path=\"/components/toggles\" component={Toggles} />\n                <Route path=\"/components/forms\" component={Forms} />\n                <Route path=\"/components/tooltips\" component={Tooltip} />\n                <Route path=\"/components/badges\" component={Badges} />\n                <Route path=\"/components/shadows\" component={Shadows} />\n                <Route path=\"/components/colours\" component={Colours} />\n                <Route path=\"/icon-library\" component={Icons} />\n                <Route path=\"/logo-library\" component={Logos} />\n              </Switch>\n            )}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/dsm-docs\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}